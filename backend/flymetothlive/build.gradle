plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.github.johnrengelman.shadow' version '8.1.1'

}

group = 'com.jazzify'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	// PostgreSQL
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Cloud Function 의존성 추가
	//implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws:4.1.3'
	//implementation 'org.springframework.cloud:spring-cloud-starter-function-web:4.1.3'

	// cloud function 다운 그레이드
	implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws:3.2.7'
	implementation 'org.springframework.cloud:spring-cloud-starter-function-web:3.2.7'

	// AWS Lambda
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
	implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
	//implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.2'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


// Shadow JAR 설정
shadowJar {
	archiveClassifier.set('aws')
	mergeServiceFiles()
	append('META-INF/spring.handlers')
	append('META-INF/spring.schemas')
	append('META-INF/spring.tooling')
}

tasks.withType(Jar) {
	manifest {
		attributes(
				'Main-Class': 'com.jazzify.flymetothlive.FlymetothliveApplication'
		)
	}
}
